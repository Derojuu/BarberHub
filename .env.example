# Copy this file to `.env` and fill in real values. Do NOT commit your real `.env`.

# Database (Postgres recommended)
# Example: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
DATABASE_URL="postgresql://user:password@localhost:5432/barberhub?schema=public"

# JWT secret used to sign authentication tokens. Use a long, random value in production.
JWT_SECRET="replace_this_with_a_long_random_secret"

# Secret required to create admin accounts via the admin register endpoint.
ADMIN_SECRET_KEY="replace_with_admin_secret_key"

# Cloudinary connection string used by the server signing endpoint.
# Format: cloudinary://API_KEY:API_SECRET@CLOUD_NAME
CLOUDINARY_URL="cloudinary://API_KEY:API_SECRET@CLOUD_NAME"

# Optional: public values consumed by client-side code (if used)
# NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME="your_cloud_name"
# NEXT_PUBLIC_BASE_URL="http://localhost:3000"

# Optional: if you use a shadow database for migrations
# SHADOW_DATABASE_URL="postgresql://user:password@localhost:5432/shadow_db?schema=public"

# Notes:
# - After filling `.env`, run:
#     pnpm prisma:generate
#     pnpm prisma:migrate
# - If you need help creating secure secrets, consider using a secrets manager
#   or run: node -e "console.log(require('crypto').randomBytes(48).toString('hex'))" to generate a long secret.
